%%Programme principal du projet Monte Carloclear all close allclcA=18;ro=1000;Navo=6.23E23;sigmaTotElectrons=1;sigmaTotPhotons=1;numIteration=1;contrainte=1;tailleMatrice=200;tailleBoite=10;%taille en cm%InputsTypeParticule=input('Type de particule');%0-Photon, 1-Electron N=input('Nombre de particules');E=input('Energie incidente');Emin=input('Energie de seuil');MatriceParticules=zeros(N,6);%Definition matrice de donneesvariableNaN=0;%Initialisation matriceMatriceParticules(:,1)=MatriceParticules(:,1)+ones(N,1)*E;MatriceParticules(:,7)=TypeParticule*ones(N,1);Inputs=[MatriceParticules(:,1) MatriceParticules(:,3) MatriceParticules(:,7)];while(contrainte)for ii=1:size(Inputs,1)if (Inputs(ii,3))%==1Outputs(2*ii-1-variableNaN:2*ii-variableNaN,:)=FonctionElectron(Inputs(ii,1));if (sum(sum(isnan(Outputs(2*ii-1-variableNaN:2*ii-variableNaN,:)),2)==3)==1)Outputs([zeros(2*ii-variableNaN-2) sum(isnan(Outputs(2*ii-1-variableNaN:2*ii-variableNaN,:)),2)==3],:)=[];variableNaN=variableNaN+1;endMatriceParticules(N*2^numIteration-N+2*ii-1-variableNaN:N*2^numIteration-N+2*ii-variableNaN,4)=-A*log(rand(2,1));%/ro*Navo*sigmaTotElectrons;elseOutputs(2*ii-1-variableNaN:2*ii-variableNaN,:)=FonctionPhoton(Inputs(ii,1));if (sum(sum(isnan(Outputs(2*ii-1-variableNaN:2*ii-variableNaN,:)),2)==3)==1)Outputs([zeros(2*ii-variableNaN-2) sum(isnan(Outputs(2*ii-1-variableNaN:2*ii-variableNaN,:)),2)==3],:)=[];variableNaN=variableNaN+1;endMatriceParticules(N*2^numIteration-N+2*ii-1-variableNaN:N*2^numIteration-N+2*ii-variableNaN,4)=-A*log(rand(2,1));%/ro*Navo*sigmaTotPhotons;endendInputs=[Inputs(:,1) Inputs(:,1)]';MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,2)=Inputs(:)-Outputs(:,1);MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,1)=Outputs(:,1);MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,3)=Outputs(:,2);MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,7)=Outputs(:,3);MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,5)=MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,4).*cos(MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,3));MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,6)=MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,4).*sin(MatriceParticules(N*2^numIteration-N+1-variableNaN:N*(2*2^numIteration-1)-variableNaN,3));Outputs(E(:,1)<Emin,:)=[];Inputs=Outputs;numIteration=numIteration+1;if (numIteration>6)  contrainte=0;endendplot_dose(MatriceParticules,Emin,tailleMatrice,tailleBoite);